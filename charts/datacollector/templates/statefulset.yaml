apiVersion: "apps/v1"
kind: StatefulSet
metadata:
  name: {{ template "datacollector.fullname" . }}
  labels:
    app: {{ template "datacollector.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ template "datacollector.name" . }}
  serviceName: {{ template "datacollector.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ template "datacollector.name" . }}
        release: {{ .Release.Name }}
        {{- if .Values.podAnnotations }}
        annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
        {{- end }}
    spec:
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds}}
      initContainers:
       - name: init-datacollector-data
         image: busybox
         command: ['sh', '-c', 'chown -R 20159 /data /opt/streamsets-datacollector-user-libs /opt/sdc-extras']
         volumeMounts:
         - name: data
           mountPath: /data
           subPath: data
         - name: data
           mountPath: /opt/streamsets-datacollector-user-libs
           subPath: streamsets-datacollector-user-libs
         - name: data
           mountPath: /opt/sdc-extras
           subPath: sdc-extras
      imagePullSecrets:
        - name: {{ .Values.image.pullSecretName }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.internalPort }}
          {{- if .Values.dataInternalPort }}
            - dataPort: {{ .Values.service.dataInternalPort }}
          {{- end }}
          env:
          - name: SDC_JAVA_OPTS
            value: "-Xmx{{ .Values.configuration.memoryHeap}} -Xms{{ .Values.configuration.memoryHeap}}"
          - name: SDC_JAVA8_OPTS
            value: "{{.Values.configuration.garbageCollector}}"
          - name: STREAMSETS_LIBRARIES_EXTRA_DIR
            value: "/opt/sdc-extras/"
          livenessProbe:
            httpGet:
              path: /public-rest/ping
              port: {{ .Values.service.internalPort }}
          readinessProbe:
            httpGet:
              path: /public-rest/ping
              port: {{ .Values.service.internalPort }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
          - name: data
            mountPath: /data
            subPath: data
          - name: data
            mountPath: /opt/streamsets-datacollector-user-libs
            subPath: streamsets-datacollector-user-libs
          - name: data
            mountPath: /opt/sdc-extras
            subPath: sdc-extras
          - name: config
            mountPath: /etc/sdc/sdc.properties
            subPath: sdc.properties
          {{- if (eq .Values.backupVolume.enabled true) }}
          - mountPath: /backup
            name: backup
          {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
  {{- if .Values.persistence.enabled }}
      volumes:
        - name: config
          configMap:
            name: {{ template "datacollector.fullname" . }}
        {{- if eq .Values.backupVolume.enabled true }}
        - name: backup
          persistentVolumeClaim:
          {{- if .Values.backupVolume.existingClaim }}
            claimName: {{ .Values.backupVolume.existingClaim }}
          {{- else }}
            claimName: {{ template "datacollector.fullname" . }}-backup
          {{- end }}
        {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: {{ .Values.persistence.name }}
    spec:
      accessModes:
        - {{ .Values.persistence.accessMode | quote }}
    {{- if .Values.persistence.storageClass }}
    {{- if (eq "-" .Values.persistence.storageClass) }}
      storageClassName: ""
    {{- else }}
      storageClassName: "{{ .Values.persistence.storageClass }}"
    {{- end }}
    {{- end }}
      resources:
        requests:
          storage: "{{ .Values.persistence.size }}"
  {{ end }}
